// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model User {
    id           String        @id @default(uuid())
    email        String?       @unique
    passwordHash String?
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
    channels     Channel[]
    categories   Category[]
    metadata     Metadata[]
    searchCache  SearchCache[]
}

model Channel {
    id         String   @id
    userId     String
    name       String
    url        String
    logo       String?
    group      String?
    season     Int?
    episode    Int?
    categories String[]
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
    @@index([name])
}

model Category {
    id        String   @id @default(uuid())
    userId    String
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, name])
    @@index([userId])
}

model Metadata {
    id        String   @id @default(uuid())
    userId    String
    key       String
    value     String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, key])
    @@index([userId])
}

model SearchCache {
    id        String   @id @default(uuid())
    userId    String
    term      String
    category  String
    results   Json
    createdAt DateTime @default(now())
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, term, category])
    @@index([userId])
}
